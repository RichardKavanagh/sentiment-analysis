apply plugin: 'java'
apply plugin: 'eclipse'

apply plugin: 'sonar-runner'

sourceCompatibility = 1.5
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

sonarRunner() {
	sonarProperties {
		property "sonar.host.url", "http://sonar.chewy.ianduffy.ie"
	}
}

repositories {       
	mavenCentral()
	maven {
		url "http://clojars.org/repo"
	}      
}

dependencies {
	compile 'org.apache.storm:storm-core:' + stormVersion
	compile 'com.fasterxml.jackson.core:jackson-core:' + jacksonVersion
	compile 'com.fasterxml.jackson.core:jackson-databind:' + jacksonVersion
	compile 'org.twitter4j:twitter4j-core:' + tweet4jVersion
	compile 'org.twitter4j:twitter4j-stream:' + tweet4jVersion
	compile 'com.googlecode.juniversalchardet:juniversalchardet:' + juniversalchardetVersion
	compile 'com.ibm.icu:icu4j:' + icu4jVersion
	compile 'org.elasticsearch:elasticsearch:' + elasticsearchVersion
	compile 'edu.stanford.nlp:stanford-corenlp:' + stanfordNLPVersion
	compile 'edu.stanford.nlp:stanford-corenlp:' + stanfordNLPVersion + '-models'
	
	testCompile 'junit:junit:4.+'
	testCompile 'org.jmock:jmock-junit4:2.6.0'
	testCompile 'org.jmock:jmock-legacy:2.6.0'
}


task makeDeb(type: Exec) {
	
	def rootdir = project.getRootDir().toString()
	
	group = "Build"
	description = "Builds a debian package file"
	commandLine = [
		"fpm",
		"-s","dir",
		"-t","deb",
		"--name","sentiment-analysis",
		"--description","Storm topology to perform sentiment-analysis.",
		"--vendor","DCU",
		"--maintainer","Richard Kavanagh<richard.kavanagh7@mail.dcu.ie>",
		"--version",version,
		"--url","www.richardkavanagh.ie",
		"--inputs","fpm/config/fpm/package-inputs",
		"--force",
		"--before-install","fpm/scripts/installer/before-install.sh",
		"--after-install","fpm/scripts/installer/after-install.sh"
	]
}

configurations.all {
 
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}